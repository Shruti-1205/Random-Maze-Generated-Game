import pygame
import time
import random

# from random import choice
from turtle import *

from freegames import floor, vector


state = {'score': 0}

path = Turtle(visible=False)
writer = Turtle(visible=False)

aim = vector(5, 0)
player = vector(-40, -80)


# set up pygame window
WIDTH = 800
HEIGHT = 800
FPS = 60

# Define colours
WHITE = (255, 255, 255)
GREEN = (0, 255, 0,)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

# initalise Pygame
pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Maze Game")
clock = pygame.time.Clock()

# setup maze variables
x = 0                    # x axis
y = 0                    # y axis
w = 20                   # width of cell
grid = []
visited = []
stack = []
solution = {}


def world():
    bgcolor('cyan')
    path.color('blue')


def build_grid(x, y, w):
    for i in range(1, 21):
        # set x coordinate to start position
        x = 20
        # start a new row
        y = y + 20
        for j in range(1, 21):
            pygame.draw.line(screen, WHITE, [x, y], [
                             x + w, y])           # top of cell
            # right of cell
            pygame.draw.line(screen, WHITE, [x + w, y], [x + w, y + w])
            # bottom of cell
            pygame.draw.line(screen, WHITE, [x + w, y + w], [x, y + w])
            # left of cell
            pygame.draw.line(screen, WHITE, [x, y + w], [x, y])
            # add cell to grid list
            grid.append((x, y))
            # move cell to new position
            x = x + 20

    # for index in range(len(tiles)):
    #     tile = tiles[index]

    #     if tile > 0:
    #         x = (index % 20) * 20 - 200
    #         y = 180 - (index // 20) * 20
    #         square(x, y)

    #         if tile == 1:
    #             path.up()
    #             path.goto(x + 10, y + 10)
    #             path.dot(2, 'white')


x, y = 20, 20                     # starting position of grid
# 1st argument = x value, 2nd argument = y value, 3rd argument = width of cell
build_grid(40, 0, 20)
# carve_out_maze(x, y)               # call build the maze  function
# plot_route_back(400, 400)         # call the plot solution function


# ##### pygame loop #######
running = True
while running:
    # keep running at the at the right speed
    clock.tick(FPS)
    # process input (events)
    for event in pygame.event.get():
        # check for closing the window
        if event.type == pygame.QUIT:
            running = False


[
((20, 20),  (40, 20),   (60, 20),   (80, 20),   (100, 20),
 (120, 20),  (140, 20),  (160, 20),  (180, 20),  (200, 20)),
((220, 20), (240, 20),  (260, 20),  (280, 20),  (300, 20),
 (320, 20),  (340, 20),  (360, 20),  (380, 20),  (400, 20)),
((20, 40),  (40, 40),   (60, 40),   (80, 40),   (100, 40),
 (120, 40),  (140, 40),  (160, 40),  (180, 40),  (200, 40)),
((220, 40), (240, 40),  (260, 40),  (280, 40),  (300, 40),
 (320, 40),  (340, 40),  (360, 40),  (380, 40),  (400, 40)),
((20, 60),  (40, 60),   (60, 60),   (80, 60),   (100, 60),
 (120, 60),  (140, 60),  (160, 60),  (180, 60),  (200, 60)),
((220, 60), (240, 60),  (260, 60),  (280, 60),  (300, 60),
 (320, 60),  (340, 60),  (360, 60),  (380, 60),  (400, 60)),
((20, 80),  (40, 80),   (60, 80),   (80, 80),   (100, 80),
 (120, 80),  (140, 80),  (160, 80),  (180, 80),  (200, 80)),
((220, 80), (240, 80),  (260, 80),  (280, 80),  (300, 80),
 (320, 80),  (340, 80),  (360, 80),  (380, 80),  (400, 80)),
((20, 100), (40, 100),  (60, 100),  (80, 100),  (100, 100),
 (120, 100), (140, 100), (160, 100), (180, 100), (200, 100)),
((220, 100), (240, 100), (260, 100), (280, 100), (300, 100),
 (320, 100), (340, 100), (360, 100), (380, 100), (400, 100)),
((20, 120), (40, 120),  (60, 120),  (80, 120),  (100, 120),
 (120, 120), (140, 120), (160, 120), (180, 120), (200, 120)),
((220, 120), (240, 120), (260, 120), (280, 120), (300, 120),
 (320, 120), (340, 120), (360, 120), (380, 120), (400, 120)),
((20, 140), (40, 140),  (60, 140),  (80, 140),  (100, 140),
 (120, 140), (140, 140), (160, 140), (180, 140), (200, 140)),
(220, 140), (240, 140), (260, 140), (280, 140), (300, 140), (320, 140), (340, 140), (360, 140), (380, 140), (400, 140)),
((20, 160), (40, 160),  (60, 160),  (80, 160),  (100, 160),
 (120, 160), (140, 160), (160, 160), (180, 160), (200, 160)),
((220, 160), (240, 160), (260, 160), (280, 160), (300, 160),
 (320, 160), (340, 160), (360, 160), (380, 160), (400, 160)),
((20, 180), (40, 180), (60, 180), (80, 180), (100, 180),
 (120, 180), (140, 180), (160, 180), (180, 180), (200, 180)),
((220, 180), (240, 180), (260, 180), (280, 180), (300, 180),
 (320, 180), (340, 180), (360, 180), (380, 180), (400, 180)),
((20, 200), (40, 200), (60, 200), (80, 200), (100, 200),
 (120, 200), (140, 200), (160, 200), (180, 200), (200, 200)),
((220, 200), (240, 200), (260, 200), (280, 200), (300, 200),
 (320, 200), (340, 200), (360, 200), (380, 200), (400, 200)),
((20, 220), (40, 220), (60, 220), (80, 220), (100, 220),
 (120, 220), (140, 220), (160, 220), (180, 220), (200, 220)),
((220, 220), (240, 220), (260, 220), (280, 220), (300, 220),
 (320, 220), (340, 220), (360, 220), (380, 220), (400, 220)),
((20, 240), (40, 240), (60, 240), (80, 240), (100, 240),
 (120, 240), (140, 240), (160, 240), (180, 240), (200, 240)),
((220, 240), (240, 240), (260, 240), (280, 240), (300, 240),
 (320, 240), (340, 240), (360, 240), (380, 240), (400, 240)),
((20, 260), (40, 260), (60, 260), (80, 260), (100, 260),
 (120, 260), (140, 260), (160, 260), (180, 260), (200, 260)),
((220, 260), (240, 260), (260, 260), (280, 260), (300, 260),
 (320, 260), (340, 260), (360, 260), (380, 260), (400, 260)),
((20, 280), (40, 280), (60, 280), (80, 280), (100, 280),
 (120, 280), (140, 280), (160, 280), (180, 280), (200, 280)),
((220, 280), (240, 280), (260, 280), (280, 280), (300, 280),
 (320, 280), (340, 280), (360, 280), (380, 280), (400, 280)),
((20, 300), (40, 300), (60, 300), (80, 300), (100, 300),
 (120, 300), (140, 300), (160, 300), (180, 300), (200, 300)),
((220, 300), (240, 300), (260, 300), (280, 300), (300, 300),
 (320, 300), (340, 300), (360, 300), (380, 300), (400, 300)),
((20, 320), (40, 320), (60, 320), (80, 320), (100, 320),
 (120, 320), (140, 320), (160, 320), (180, 320), (200, 320)),
((220, 320), (240, 320), (260, 320), (280, 320), (300, 320),
 (320, 320), (340, 320), (360, 320), (380, 320), (400, 320)),
((20, 340), (40, 340), (60, 340), (80, 340), (100, 340),
 (120, 340), (140, 340), (160, 340), (180, 340), (200, 340)),
((220, 340), (240, 340), (260, 340), (280, 340), (300, 340),
 (320, 340), (340, 340), (360, 340), (380, 340), (400, 340)),
((20, 360), (40, 360), (60, 360), (80, 360), (100, 360),
 (120, 360), (140, 360), (160, 360), (180, 360), (200, 360)),
((220, 360), (240, 360), (260, 360), (280, 360), (300, 360),
 (320, 360), (340, 360), (360, 360), (380, 360), (400, 360)),
((20, 380), (40, 380), (60, 380), (80, 380), (100, 380),
 (120, 380), (140, 380), (160, 380), (180, 380), (200, 380)),
((220, 380), (240, 380), (260, 380), (280, 380), (300, 380),
 (320, 380), (340, 380), (360, 380), (380, 380), (400, 380)),
((20, 400), (40, 400), (60, 400), (80, 400), (100, 400),
 (120, 400), (140, 400), (160, 400), (180, 400), (200, 400)),
((220, 400), (240, 400), (260, 400), (280, 400), (300, 400), (320, 400), (340, 400), (360, 400), (380, 400), (400, 400))]
